<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.0.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/task
   		http://www.springframework.org/schema/task/spring-task-4.0.xsd
		http://code.alibabatech.com/schema/dubbo        
		http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
		
		<!-- 1、配置映射器与适配器 -->  
        <mvc:annotation-driven></mvc:annotation-driven>  
        
		<!-- 加载属性文件 ignore-unresolvable="true"-->
		<context:property-placeholder location="classpath:jdbc.properties" />
		<!-- 使用Annotation自动注册Bean,扫描@Controller和@Service -->
		<context:component-scan base-package="cn.itcast" use-default-filters="false"><!-- base-package 如果多个，用“,”分隔 -->
			<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
			<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		</context:component-scan>
		
		
	    <!-- 启动对@AspectJ注解的支持 --> 
	     <!-- proxy-target-class等于true是强制使用cglib代理，proxy-target-class默认是false，如果你的类实现了接口 就走JDK代理，如果没有，走cglib代理  -->
	     <!-- 注：对于单利模式建议使用cglib代理，虽然JDK动态代理比cglib代理速度快，但性能不如cglib -->
	     <!--如果不写proxy-target-class="true"这句话也没问题-->
	     <aop:aspectj-autoproxy proxy-target-class="true"/>
	     <!--切面-->
	     <bean id="systemLogAspect" class="cn.itcast.common.log.SystemLogAspect"></bean>
		
		
		<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->   
        <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">   
            <!-- 指定所上传文件的总大小不能超过200000KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->   
            <property name="maxUploadSize" value="200000000"/>  
        </bean>   
          
       <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">   
            <property name="exceptionMappings">   
                <props>   
                    <!--遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error.jsp页面 -->  
                    <!-- <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error</prop> --> 
                     <prop key="org.apache.shiro.authz.AuthorizationException">unauthorized</prop>
                 </props>   
            </property>   
        </bean>   
    
	   <!-- 定义跳转文件的前后缀 -->
	   <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	   		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
	   		<property name="prefix" value="${web.view.prefix}"/>
		    <property name="suffix" value="${web.view.suffix}"/>
	   		<property name="order" value="2"/>
	   </bean>
	   
	   <!-- 支持Shiro对Controller的方法级AOP安全控制 begin   越权访问控制1!!!!!!-->
		<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
			<property name="proxyTargetClass" value="true" />
		</bean>
	
	  <!-- 静态资源映射 -->
      <mvc:resources mapping="/static/**" location="/static/" cache-period="31536000"/>
</beans>
