<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.0.xsd"
	default-lazy-init="true">

	<description>Shiro Configuration</description>
    <!-- 安全认证过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />
        <property name="loginUrl" value="/jsp/login.jsp" />
        <property name="successUrl" value="/index.html" />
        <!-- <property name="unauthorizedUrl" value="/jsp/unauthorized.jsp" /> -->
         <property name="filters">
            <map>
				<!-- 自定义登录验证过滤器 -->
               <entry key="authc" value-ref="authenticationFilter"/>
            </map>
        </property> 
        <property name="filterChainDefinitions">
            <value>
                <!-- 对静态资源设置匿名访问 -->
                /static/** = anon
                /unauthorized.jsp = anon
				<!-- 验证码，可匿名访问 -->
				/authImage* = anon
				<!-- 登陆页面和方法，可匿名访问 -->
				/login.jsp = anon
				/user/login.action = anon
				<!-- 请求 logout.do地址，shiro去清除session -->
				/user/logout.action = logout
				/index.html = authc
				 <!--list列表需要user:view权限   取消url拦截配置，使用注解授权方式-->
				/** = authc
            </value>
        </property>
    </bean>

    <!-- 定义 Shiro 主要业务对象 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
       <property name="realms">
            <list>
                <ref bean="systemAuthorizingRealm"/>
            </list>
        </property>
        <!-- 注入缓存管理器 -->
        <property name="cacheManager" ref="cacheManager"/>
        <!-- 注入session管理器 -->
        <property name="sessionManager" ref="sessionManager"/>
        <!-- 记住我 -->
    </bean>
    <bean id="systemAuthorizingRealm" class="cn.itcast.common.shiro.SystemAuthorizingRealm">
    </bean>
    
    <bean id="redisSessionDAO" class="cn.itcast.common.redis.RedisSessionDao"/>
    <bean id="cacheManager" class="cn.itcast.common.redis.RedisCacheManager">
        <property name="redisTemplate" ref="redisTemplate"/>
    </bean>

    <!-- <bean id="credentialsMatcher"
          class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
    </bean> -->

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="2592000000"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionDAO" ref="redisSessionDAO"/>
    </bean>

    <!--<bean id="authorizationFilter" class="com.hunt.system.security.shiro.ShiroAuthorizationFilter"/>-->
    <bean id="authenticationFilter" class="cn.itcast.common.shiro.ShiroAuthenticationFilter"/>

    <!-- Shiro生命周期处理器 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    
	<!-- AOP式方法级权限检查  -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
          <!-- 指定使用cglib创建代理 -->
		<property name="proxyTargetClass" value="true" />
	</bean>
	<!-- 切面 -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
	
</beans>